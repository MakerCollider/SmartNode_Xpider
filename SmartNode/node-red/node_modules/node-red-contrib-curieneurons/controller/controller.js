module.exports = function(RED) {
    var collect = require('../nn-extends');

    function controllerNode(config) {
        RED.nodes.createNode(this, config);
        this.name = config.name;
        this.outkey = config.outkey;
        var node = this;

        node.status({fill: 'yellow',shape: 'dot',text: 'none'});
        _G_ControlMode = 'none';
        this.on('input', function (msg){
            var output_key = 'Mode';
            var _output = node.outkey;
            (_output == '' || _output.length == 0) ? output_key = "Mode" : output_key = node.outkey;
            if (msg.hasOwnProperty("payload")){

                if (msg.payload == 'collect'){
                    node.status({fill: 'green',shape: 'dot',text: 'collect'});
                    msg[output_key] = 'collect';
                    _G_ControlMode = 'collect';
                    node.send(msg);
                }
                else if(msg.payload == 'learn' || msg.payload == 'train'){
                    node.status({fill: 'green',shape: 'dot',text: 'train'});
                    msg[output_key] = 'train';
                    _G_ControlMode = 'train';
                    node.send(msg);
                }
                else if(msg.payload == 'classify' || msg.payload == 'run'){
                    node.status({fill: 'green',shape: 'dot',text: 'run'});
                    msg[output_key] = 'run';
                    _G_ControlMode = 'run';
                    node.send(msg);
                }
                else{
                    node.status({fill: 'yellow',shape: 'dot',text: 'none'});
                    msg[output_key] = 'none';
                    _G_ControlMode = 'none';
                    node.send(msg);
                }
            }
        });

        this.on('close', function() {
        });
    }
    RED.nodes.registerType("controller", controllerNode);
}
